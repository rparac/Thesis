% a either a sentence is a concept or a premise it can be both
:- concept(S0, S1), concept(S1, S0).
premise(S0) :- concept(S0, S1).

% types
token(T) :- start(T).
token(T) :- succ(_, T).
token(T) :- succ(T, _).
token(T) :- dep(_, T, _).
token(T) :- dep(_, _, T).
label(L) :- dep(L, _, _).
entity(X) :- token(X).
entity(X) :- label(X).
1 { token(X); label(X) } 1 :- entity(X).


% sequences
% only one token can start a sentence
:- start(T0), start(T1), T0 != T1.

% dependencies
% a dependent token can only be a dependency of one type
:- dep(L0, _, T), dep(L1, _, T), L0 != L1.
% a typed dependency only has one
:- dep(L, T0, T), dep(L, T1, T), T0 != T1.
% a token cannot be a dependency of itself
:- dep(_, T, T).

word(W) :- token(_, W).


% T2 is reachable from T1 by a path using in_generalised_sent nodes
% in_generalised_sent_chain(T1, T2) :- in_generalised_sent(T1), in_generalised_sent(T2), dep(_, T1, T2).
% in_generalised_sent_chain(T1, T3) :- in_generalised_sent_chain(T1, T2), in_generalised_sent_chain(T2, T3).
% 
% 
% :- in_generalised_sent(T2), root(T1), T1 != T2, not in_generalised_sent_chain(T1, T2).


% constant definitions - FastLas2 pulls them

label(acl).
label(acomp).
label(advcl).
label(advmod).
label(agent).
label(amod).
label(appos).
label(attr).
label(aux).
label(auxpass).
label(case).
label(cc).
label(ccomp).
label(clf).
label(complm).
label(compound).
label(conj).
label(cop).
label(csubj).
label(csubjpass).
label(dative).
label(dep).
label(det).
label(discourse).
label(dislocated).
label(dobj).
label(expl).
label(fixed).
label(flat).
label(goeswith).
label(hmod).
label(hyph).
label(infmod).
label(intj).
label(iobj).
label(list).
label(mark).
label(meta).
label(neg).
label(nmod).
label(nn).
label(npadvmod).
label(nsubj).
label(nsubjpass).
label(nounmod).
label(npmod).
label(num).
label(number).
label(nummod).
label(oprd).
label(obj).
label(obl).
label(orphan).
label(parataxis).
label(partmod).
label(pcomp).
label(pobj).
label(poss).
label(possessive).
label(preconj).
label(prep).
label(prt).
label(punct).
label(quantmod).
label(rcmod).
label(relcl).
label(reparandum).
label(root).
label(vocative).
label(xcomp).
